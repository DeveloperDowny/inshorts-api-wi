# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SearchParams(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title: str=None, keyword: str=None, author: str=None):  # noqa: E501
        """SearchParams - a model defined in Swagger

        :param title: The title of this SearchParams.  # noqa: E501
        :type title: str
        :param keyword: The keyword of this SearchParams.  # noqa: E501
        :type keyword: str
        :param author: The author of this SearchParams.  # noqa: E501
        :type author: str
        """
        self.swagger_types = {
            'title': str,
            'keyword': str,
            'author': str
        }

        self.attribute_map = {
            'title': 'title',
            'keyword': 'keyword',
            'author': 'author'
        }
        self._title = title
        self._keyword = keyword
        self._author = author

    @classmethod
    def from_dict(cls, dikt) -> 'SearchParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SearchParams of this SearchParams.  # noqa: E501
        :rtype: SearchParams
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this SearchParams.


        :return: The title of this SearchParams.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this SearchParams.


        :param title: The title of this SearchParams.
        :type title: str
        """

        self._title = title

    @property
    def keyword(self) -> str:
        """Gets the keyword of this SearchParams.


        :return: The keyword of this SearchParams.
        :rtype: str
        """
        return self._keyword

    @keyword.setter
    def keyword(self, keyword: str):
        """Sets the keyword of this SearchParams.


        :param keyword: The keyword of this SearchParams.
        :type keyword: str
        """

        self._keyword = keyword

    @property
    def author(self) -> str:
        """Gets the author of this SearchParams.


        :return: The author of this SearchParams.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author: str):
        """Sets the author of this SearchParams.


        :param author: The author of this SearchParams.
        :type author: str
        """

        self._author = author
